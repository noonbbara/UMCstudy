plugins {
    id 'java'
    id 'org.springframework.boot' version '3.0.0'
    id 'io.spring.dependency-management' version '1.0.15.RELEASE'
    id "com.ewerk.gradle.plugins.querydsl" version "1.0.10"
}

group = 'com.example'
version = '1.0.0'
sourceCompatibility = '17'

repositories {
    mavenCentral()
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.hibernate.orm:hibernate-core:6.0.2.Final'  // Hibernate 6
    implementation 'mysql:mysql-connector-java:8.0.33'

    // QueryDSL (jakarta 버전)
    implementation 'com.querydsl:querydsl-jpa:5.0.0:jakarta'
    annotationProcessor "com.querydsl:querydsl-apt:5.0.0:jakarta"
    annotationProcessor "jakarta.annotation:jakarta.annotation-api"
    annotationProcessor "jakarta.persistence:jakarta.persistence-api"

    // Jackson
    implementation 'com.fasterxml.jackson.core:jackson-databind:2.13.3'
    implementation 'com.fasterxml.jackson.core:jackson-annotations:2.13.3'
    implementation 'com.fasterxml.jackson.core:jackson-core:2.13.3'

    // Lombok
    compileOnly 'org.projectlombok:lombok:1.18.22'
    annotationProcessor 'org.projectlombok:lombok:1.18.22'

    // OpenAPI (Swagger)
    implementation 'org.springdoc:springdoc-openapi-ui:1.6.9'
    implementation 'org.springdoc:springdoc-openapi-data-rest:1.6.9'

    testImplementation 'org.springframework.boot:spring-boot-starter-test'
}

def generated = "$buildDir/generated/querydsl"

querydsl {
    jpa = true
    querydslSourcesDir = generated  // QueryDSL 소스 경로 설정
}

sourceSets {
    main {
        java {
            // 'generated' 경로만 추가
            srcDirs += generated
        }
        resources {
            srcDirs = ['src/main/resources']  // 리소스는 기존 경로 유지
        }
    }
}

compileQuerydsl {
    options.annotationProcessorPath = configurations.querydsl  // 어노테이션 프로세서 경로 설정
}

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
    querydsl.extendsFrom compileClasspath
}

tasks.named('test') {
    useJUnitPlatform()
}
